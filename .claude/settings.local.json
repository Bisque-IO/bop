{
  "permissions": {
    "allow": [
      "Bash(timeout 30 xmake r test-uws-tcp --test-case=\"TCP Large Data Transfer\")",
      "Bash(timeout:*)",
      "Bash(xmake r:*)",
      "Bash(set UWS_TESTS_DEBUG=1)",
      "Bash(xmake:*)",
      "Bash(cargo check:*)",
      "Bash(cargo test)",
      "Bash(cargo test:*)",
      "Bash(cargo run:*)",
      "WebSearch",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:github.com)",
      "Bash(cargo doc:*)",
      "Bash(mklink:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --test aof_manager_tests test_instance_creation_and_management -- --exact --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test aof::tests::test_aof_creation --lib -- --nocapture)",
      "Bash(RUST_BACKTRACE=full cargo test aof::tests::test_aof_creation --lib -- --nocapture)",
      "Bash(set RUST_BACKTRACE=1)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --test aof_integration_tests test_aof_restart_and_recovery)",
      "Read(/usr/bin/**)",
      "Read(/usr/**)",
      "Bash(for:*)",
      "Bash(done)",
      "Bash(cargo build:*)",
      "Bash(git checkout:*)",
      "Bash(cargo fmt:*)",
      "Bash(cargo clippy:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --lib local_store::tests::evicts_old_chunks)",
      "Bash(git mv:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(python3:*)",
      "Bash(cargo tree:*)",
      "Bash(cargo metadata:*)",
      "Bash(python -c \"import sys, json; data = json.load(sys.stdin); tracing = [p for p in data[''''packages''''] if p[''''name''''] == ''''tracing''''][0] if [p for p in data[''''packages''''] if p[''''name''''] == ''''tracing''''] else None; print(''''Features:'''', tracing[''''features''''] if tracing else ''''Not found'''')\")",
      "Bash(cargo expand:*)",
      "Bash(cargo clean:*)",
      "Bash(del:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --lib mpmc::tests::test_segment_pop_no_segment_available -- --exact --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo run --package bop-mpmc --example minimal_spsc_executor_benchmark --release)",
      "Bash(target/release/examples/minimal_spsc_executor_benchmark.exe:*)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(echo:*)",
      "Bash(rustc:*)",
      "Bash(pkill:*)",
      "Bash(taskkill:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --package bop-executor --lib timer_wheel::tests::test_spsc_basic_functionality -- --exact --nocapture)",
      "Bash(do echo \"Run $i:\")",
      "Bash(exit 1)",
      "Bash(do echo \"Run $i\")",
      "Bash({ echo \"FAILED on run $i\")",
      "Bash(})",
      "Bash(do printf \"Run %d: \" $i)",
      "Bash(if [ -d \"crates/bop-executor/examples\" ])",
      "Bash(then echo \"exists\")",
      "Bash(else mkdir -p crates/bop-executor/examples)",
      "Bash(fi)"
    ],
    "deny": [],
    "ask": []
  }
}
